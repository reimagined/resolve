name: Dev CI/CD

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  smoke-test:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' || (github.event_name == 'pull_request' && (startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'fix/')))

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '10'

      - name: Install
        run: |
          yarn install --frozen-lockfile
          yarn validate-lock-file

      - name: Prettier
        run: yarn prettier:check

      - name: ESLint
        run: yarn lint

      - name: Unit test
        run: yarn test

      - name: Integration test
        run: yarn test:integration

  e2e-macOS-test:
    needs: [smoke-test]
    runs-on: [self-hosted, macOS, X64, resolve-mac-mini]

    if: github.event_name == 'pull_request' && (startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'fix/'))

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: yarn install --frozen-lockfile

      - name: E2E test
        run: yarn test:e2e

  publish-dev:
    needs: [smoke-test]
    runs-on: ubuntu-latest
    continue-on-error: true

    if: github.event_name == 'push'

    env:
      NPM_REGISTRY: ${{ secrets.PRIVATE_NPM_REGISTRY }}
      NPM_TOKEN: ${{ secrets.PRIVATE_NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Install & Build
        run: yarn install --frozen-lockfile

      - name: Publish to private repository
        uses: ./.github/actions/publish
        with:
          npm_registry: ${{ secrets.PRIVATE_NPM_REGISTRY }}
          npm_token: ${{ secrets.PRIVATE_NPM_TOKEN }}
          version: ${{ github.sha }}
          release_type: nightly
          tag: nightly

  cloud-test:
    needs: [smoke-test, e2e-macOS-test]
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2

      - name: Install & Build
        run: |
          echo "installing packages and building the repository"
          yarn

      - id: publish
        name: Publish to private repository
        uses: ./.github/actions/publish
        with:
          npm_registry: ${{ secrets.PRIVATE_NPM_REGISTRY }}
          npm_token: ${{ secrets.PRIVATE_NPM_TOKEN }}
          version: ${{ github.sha }}
          release_type: cloud-test
          tag: cloud-test
          unpublish: true

      - name: Prepare test application
        run: |
          test_app_dir=$(mktemp -d -t test-app-XXXXXXXXX)
          echo "::set-env name=test_app_dir::${test_app_dir}"
          cp -rf ./functional-tests/app/. ${test_app_dir}
          cd ${test_app_dir}
          rm -rf node_modules

      - id: deploy
        name: Deploy test app to the cloud
        uses: ./.github/actions/deploy
        with:
          resolve_version: ${{ steps.publish.outputs.release_version }}
          npm_registry: http://npm.resolve-dev.ml:10080
          app_directory: ${{ env.test_app_dir }}
          generate_app_name: true
          resolve_api_url: https://api.resolve.sh
          resolve_user: ${{ secrets.RESOLVE_CLOUD_USER }}
          resolve_token: ${{ secrets.RESOLVE_CLOUD_TOKEN }}
          deploy_args: --verbosity=debug

      - name: API tests
        run: |
          cd functional-tests
          yarn run-test api --url=${{ steps.deploy.outputs.app_url }}

      - name: Testcafe tests
        run: |
          cd functional-tests
          yarn run-test testcafe --url=${{ steps.deploy.outputs.app_url }} --testcafe-browser=chrome --ci-mode
