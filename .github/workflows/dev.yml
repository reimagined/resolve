name: Dev CI/CD

on:
  push:
    branches: [ dev, feature/cloud-test-app ]
  pull_request:
    branches: [ dev ]

jobs:
#  smoke-test:
#    runs-on: ubuntu-latest
#
#    if: github.event_name == 'push' || (github.event_name == 'pull_request' && (startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'fix/')))
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/setup-node@v2-beta
#        with:
#          node-version: '10'
#
#      - name: Install
#        run: yarn install --frozen-lockfile
#
#      - name: Prettier
#        run: yarn prettier:check
#
#      - name: ESLint
#        run: yarn lint
#
#      - name: Unit test
#        run: yarn test
#
#      - name: Integration test
#        run: yarn test:integration

#  e2e-macOS-test:
#    runs-on: [self-hosted, macOS, X64, resolve-mac-mini]
#
#    if: github.event_name == 'pull_request' && (startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'fix/'))
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install
#        run: yarn install --frozen-lockfile
#
#      - name: E2E test
#        run: yarn test:e2e

#  publish-dev:
#    runs-on: ubuntu-latest
#
#    if: github.event_name == 'push'
#
#    env:
#      NPM_REGISTRY: ${{ secrets.PRIVATE_NPM_REGISTRY }}
#      NPM_TOKEN: ${{ secrets.PRIVATE_NPM_TOKEN }}
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install & Build
#        run: yarn install --frozen-lockfile
#
#      - name: Publish to private registry
#        run: |
#          SCRIPTS=$(pwd)/ci
#          VERSION=$(${SCRIPTS}/package-json-tools.js nightly ${{ github.sha }})
#          ./ci/npm-patch-rc
#          npx oao all "${SCRIPTS}/package-json-tools.js patch-dependencies '(?!resolve-cloud-common$)(resolve-.*$)' ${VERSION} && ${SCRIPTS}/publish-dev ${VERSION} nightly"
  cloud-test:
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Publish temp packages
        run: |
          echo "publishing current repo"


      - name: Prepare test application
        run: |
          test_app_dir=$(mktemp -d -t test-app-XXXXXXXXX)
          echo "::set-env name=test_app_dir::${test_app_dir}"
          cp -rf ./functional-tests/app/* ${test_app_dir}
          cd ${test_app_dir}
          yarn

      - name: Check
        run: |
          ls ${test_app_dir}

#      - uses:  ./.github/actions/deploy

