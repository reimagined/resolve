name: dev (PR)

on:
  pull_request:
    branches:
      - dev

jobs:
  buildAndTest:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous run (if any)
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/**/node_modules
            internal/**/node_modules
            examples/**/node_modules
            templates/**/node_modules
            tutorial/**/node_modules
            functional-tests/**/node_modules
            tests/**/node_modules
            website/**/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '!**/node_modules/**') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            packages/**/es
            packages/**/lib
            packages/**/types
            packages/**/*.tsbuildinfo
            !packages/**/node_modules/**
            !packages/**/src/es
            !packages/**/src/lib
            !packages/**/src/types
            internal/**/es
            internal/**/lib
            internal/**/types
            internal/**/*.tsbuildinfo
            !internal/**/node_modules/**
            !internal/**/src/es
            !internal/**/src/lib
            !internal/**/src/types
            .packages/**
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-

      - name: Install
        run: yarn install

      - name: Check if yarn.lock changed
        run: echo "git_diff=$(git diff --name-only yarn.lock)" >> $GITHUB_ENV

      - name: Fail job if yarn.lock changed
        if: env.git_diff
        run: exit 1

      - name: Validate yarn.lock
        run: yarn validate-lock-file

      - name: Run Prettier
        run: yarn prettier:check

      - name: Run ESLint
        run: yarn lint

      - name: Test:unit
        env:
          DEBUG_LEVEL: error
        run: yarn test

  integrationTest:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: buildAndTest
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'maintenance/')
      || startsWith(github.head_ref, 'hotfix/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'bugfix/')
    services:
      postgres:
        image: clkao/postgres-plv8:10-2
        env:
          POSTGRES_PASSWORD: postgres
          PGOPTIONS: -c max_connections=300
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/**/node_modules
            internal/**/node_modules
            examples/**/node_modules
            templates/**/node_modules
            tutorial/**/node_modules
            functional-tests/**/node_modules
            tests/**/node_modules
            website/**/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '!**/node_modules/**') }}

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            packages/**/es
            packages/**/lib
            packages/**/types
            packages/**/*.tsbuildinfo
            !packages/**/node_modules/**
            !packages/**/src/es
            !packages/**/src/lib
            !packages/**/src/types
            internal/**/es
            internal/**/lib
            internal/**/types
            internal/**/*.tsbuildinfo
            !internal/**/node_modules/**
            !internal/**/src/es
            !internal/**/src/lib
            !internal/**/src/types
            .packages/**
          key: ${{ runner.os }}-build-${{ github.run_id }}

      - name: Install
        run: |
          yarn install --ignore-scripts

      - name: Integration Tests
        env:
          DEBUG_LEVEL: error
        run: yarn test:integration

      - name: PostgreSQL Integration Tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: postgres
          DEBUG_LEVEL: error
        run: yarn test:integration-postgres

  e2eTest:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: buildAndTest
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'hotfix/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'bugfix/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/**/node_modules
            internal/**/node_modules
            examples/**/node_modules
            templates/**/node_modules
            tutorial/**/node_modules
            functional-tests/**/node_modules
            tests/**/node_modules
            website/**/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '!**/node_modules/**') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            packages/**/es
            packages/**/lib
            packages/**/types
            packages/**/*.tsbuildinfo
            !packages/**/node_modules/**
            !packages/**/src/es
            !packages/**/src/lib
            !packages/**/src/types
            internal/**/es
            internal/**/lib
            internal/**/types
            internal/**/*.tsbuildinfo
            !internal/**/node_modules/**
            !internal/**/src/es
            !internal/**/src/lib
            !internal/**/src/types
            .packages/**
          key: ${{ runner.os }}-build-${{ github.run_id }}

      - name: Install
        run: |
          yarn install --ignore-scripts

      - name: Test:e2e (ubuntu:chrome-headless)
        env:
          RESOLVE_E2E_TESTS_BROWSER: chrome
          RESOLVE_E2E_TESTS_HEADLESS_MODE: true
          DEBUG: resolve:*
          DEBUG_LEVEL: error
        run: |
          yarn test:e2e

  cloudTest:
    name: Cloud Tests
    runs-on: ubuntu-latest
    needs: buildAndTest
    concurrency: cloud-environment
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'hotfix/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'bugfix/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/**/node_modules
            internal/**/node_modules
            examples/**/node_modules
            templates/**/node_modules
            tutorial/**/node_modules
            functional-tests/**/node_modules
            tests/**/node_modules
            website/**/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '!**/node_modules/**') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            packages/**/es
            packages/**/lib
            packages/**/types
            packages/**/*.tsbuildinfo
            !packages/**/node_modules/**
            !packages/**/src/es
            !packages/**/src/lib
            !packages/**/src/types
            internal/**/es
            internal/**/lib
            internal/**/types
            internal/**/*.tsbuildinfo
            !internal/**/node_modules/**
            !internal/**/src/es
            !internal/**/src/lib
            !internal/**/src/types
            .packages/**
          key: ${{ runner.os }}-build-${{ github.run_id }}

      - name: Install
        run: |
          yarn install --ignore-scripts

      - name: Publish to private repository
        id: publish
        uses: reimagined/github-actions/publish@v1
        with:
          registry: github
          token: ${{ secrets.RESOLVE_BOT_PAT }}
          version: auto
          build: ${{ github.sha }}
          tag: cloud-test
          unpublish: ${{ secrets.UNPUBLISH_TEST_PACKAGES }}
          github_target_repository: resolve-js/resolve

      - name: Checkout cloud environment
        uses: actions/checkout@v2
        with:
          repository: DevExpress/resolve-cloud
          ref: dev
          token: ${{ secrets.RESOLVE_BOT_PAT }}
          path: resolve-cloud

      - name: Install cloud environment
        id: install_cloud
        uses: reimagined/github-actions/install-cloud@v1
        with:
          aws_access_key_id: ${{ secrets.TEST_CLOUD_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.TEST_CLOUD_AWS_SECRET_ACCESS_KEY }}
          stage: framework-test
          version: ${{ steps.publish.outputs.version }}
          source: ./resolve-cloud
          registry: ${{ steps.publish.outputs.registry_url }}
          token: ${{ secrets.RESOLVE_BOT_PAT }}
          scopes: '@resolve-js'

      - name: Prepare test application
        run: |
          test_app_dir=$(mktemp -d -t test-app-XXXXXXXXX)
          echo "test_app_dir=${test_app_dir}" >> $GITHUB_ENV
          cp -rf ./functional-tests/app/. ${test_app_dir}
          cd ${test_app_dir}
          rm -rf node_modules

      - name: Build initial events
        env:
          TEST_APP_DIR: ${{ env.test_app_dir }}
          EVENT_STORE_PATH: ./test-event-store
        run: |
          yarn ts-node functional-tests/utils/generateEvents.ts

      - name: Deploy test app to the cloud
        id: deploy
        uses: reimagined/github-actions/deploy@v1
        with:
          source: ${{ env.test_app_dir }}
          cloud_api_url: ${{ steps.install_cloud.outputs.api_url}}
          cloud_user: ${{ secrets.RESOLVE_CLOUD_USER }}
          cloud_token: ${{ secrets.RESOLVE_CLOUD_TOKEN }}
          cli_sources: resolve-cloud/cli/resolve-cloud
          framework_version: ${{ steps.publish.outputs.version }}
          framework_scope: '@resolve-js'
          randomize_name: true
          package_registry: ${{ steps.publish.outputs.registry_url }}
          package_registry_token: ${{ secrets.RESOLVE_BOT_PAT }}
          package_registry_scopes: '@resolve-js'
          deploy_args: --verbosity=debug --env=DEBUG=resolve:* --env=DEBUG_LEVEL=debug
          event_store_path: ./test-event-store
          skip_remove: false
          retrieve_logs: false

      - name: Test:functional (API)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_CLOUD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_CLOUD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
          RESOLVE_TESTS_TARGET_DEPLOYMENT_ID: ${{ steps.deploy.outputs.id }}
          RESOLVE_TESTS_TARGET_VERSION: ${{ steps.publish.outputs.version }}
          RESOLVE_TESTS_TARGET_STAGE: framework-test
          DEBUG_LEVEL: error

        run: |
          cd functional-tests
          yarn run-test api --url=${{ steps.deploy.outputs.url }}

      - name: Test:functional (TestCafe)
        env:
          DEBUG_LEVEL: error
        run: |
          cd functional-tests
          yarn run-test testcafe --url=${{ steps.deploy.outputs.url }} --testcafe-browser=chrome --ci-mode --testcafe-timeout=10000

  websiteTest:
    name: Website Tests
    runs-on: ubuntu-latest
    needs: buildAndTest
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'hotfix/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'bugfix/')
      || startsWith(github.head_ref, 'docs/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/**/node_modules
            internal/**/node_modules
            examples/**/node_modules
            templates/**/node_modules
            tutorial/**/node_modules
            functional-tests/**/node_modules
            tests/**/node_modules
            website/**/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '!**/node_modules/**') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            packages/**/es
            packages/**/lib
            packages/**/types
            packages/**/*.tsbuildinfo
            !packages/**/node_modules/**
            !packages/**/src/es
            !packages/**/src/lib
            !packages/**/src/types
            internal/**/es
            internal/**/lib
            internal/**/types
            internal/**/*.tsbuildinfo
            !internal/**/node_modules/**
            !internal/**/src/es
            !internal/**/src/lib
            !internal/**/src/types
            .packages/**
          key: ${{ runner.os }}-build-${{ github.run_id }}

      - name: Install
        run: |
          yarn install --ignore-scripts

      - name: Build website
        env:
          ALGOLIA_RESOLVE_API_KEY: ${{ secrets.ALGOLIA_RESOLVE_API_KEY }}
        run: yarn workspace website build

      - name: Test website
        run: yarn workspace website test
