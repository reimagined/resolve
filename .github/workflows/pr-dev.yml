name: dev (PR)

on:
  pull_request:
    branches:
      - dev

jobs:
  verify:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'fix/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Install
        run: |
          yarn install --frozen-lockfile
          yarn validate-lock-file

      - name: Prettier
        run: yarn prettier:check

      - name: ESLint
        run: yarn lint

      - name: Test:unit
        run: yarn test

      - name: Test:integration
        run: yarn test:integration

      - name: Test:e2e (ubuntu:chrome-headless)
        env:
          RESOLVE_E2E_TESTS_BROWSER: chrome
          RESOLVE_E2E_TESTS_HEADLESS_MODE: true
          DEBUG: resolve:scripts*
          DEBUG_LEVEL: debug
        run: yarn test:e2e

      - name: Publish to private repository
        id: publish
        uses: reimagined/github-actions/publish@v1
        with:
          registry: github
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          version: auto
          build: ${{ github.sha }}
          tag: cloud-test
          unpublish: true
          github_target_repository: resolve-js/resolve

      - name: Checkout cloud environment
        uses: actions/checkout@v2
        with:
          repository: DevExpress/resolve-cloud2
          ref: 'feature/scoped-packages'
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          path: resolve-cloud

      - name: Install cloud environment
        id: install_cloud
        uses: reimagined/github-actions/install-cloud@v1
        with:
          aws_access_key_id: ${{ secrets.TEST_CLOUD_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.TEST_CLOUD_AWS_SECRET_ACCESS_KEY }}
          stage: framework-test
          version: ${{ steps.publish.outputs.version }}
          source: ./resolve-cloud
          registry: ${{ steps.publish.outputs.registry_url }}
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          scopes: '@resolve-js'

      - name: Prepare test application
        run: |
          test_app_dir=$(mktemp -d -t test-app-XXXXXXXXX)
          echo "test_app_dir=${test_app_dir}" >> $GITHUB_ENV
          cp -rf ./functional-tests/app/. ${test_app_dir}
          cd ${test_app_dir}
          rm -rf node_modules

      - name: Deploy test app to the cloud
        id: deploy
        uses: reimagined/github-actions/deploy@v1
        with:
          source: ${{ env.test_app_dir }}
          cloud_api_url: ${{ steps.install_cloud.outputs.api_url}}
          cloud_user: ${{ secrets.RESOLVE_CLOUD_USER }}
          cloud_token: ${{ secrets.RESOLVE_CLOUD_TOKEN }}
          cli_sources: resolve-cloud/cli/resolve-cloud
          framework_version: ${{ steps.publish.outputs.version }}
          randomize_name: true
          package_registry: ${{ steps.publish.outputs.registry_url }}
          package_registry_token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          package_registry_scopes: '@resolve-js'
          deploy_args: --verbosity=debug

      - name: Test:functional (API)
        run: |
          cd functional-tests
          yarn run-test api --url=${{ steps.deploy.outputs.url }}

      - name: Test:functional (TestCafe)
        run: |
          cd functional-tests
          yarn run-test testcafe --url=${{ steps.deploy.outputs.url }} --testcafe-browser=chrome --ci-mode --testcafe-timeout=10000
