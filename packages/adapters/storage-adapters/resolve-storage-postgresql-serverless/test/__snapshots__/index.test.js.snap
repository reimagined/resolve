// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolve-storage-mysql-serverless "getLatestEvent" should get the latest event 1`] = `
Array [
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "SELECT * FROM \\"event-store\\".\\"events\\" 
    ORDER BY \\"eventId\\" DESC
    OFFSET 0
    LIMIT 1",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"type\\" IN ('AAA')
    ORDER BY \\"eventId\\" DESC
    OFFSET 0
    LIMIT 1",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"aggregateId\\" IN ('id1')
    ORDER BY \\"eventId\\" DESC
    OFFSET 0
    LIMIT 1",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"timestamp\\" > 1 AND \\"timestamp\\" < 3
    ORDER BY \\"eventId\\" DESC
    OFFSET 0
    LIMIT 1",
  },
]
`;

exports[`resolve-storage-mysql-serverless "loadEvents" should load events 1`] = `
Array [
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 1
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 1
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"type\\" IN ('AAA')
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"type\\" IN ('AAA')
          ORDER BY \\"eventId\\" ASC
          OFFSET 1
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"aggregateId\\" IN ('id1')
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"aggregateId\\" IN ('id1')
          ORDER BY \\"eventId\\" ASC
          OFFSET 1
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"timestamp\\" > 1 AND \\"timestamp\\" < 3
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" WHERE \\"timestamp\\" > 1 AND \\"timestamp\\" < 3
          ORDER BY \\"eventId\\" ASC
          OFFSET 1
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
]
`;

exports[`resolve-storage-mysql-serverless "saveEvent" should save an event 1`] = `
Array [
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "START TRANSACTION;SELECT 'OK' WHERE (  (SELECT 'Event store is frozen' AS \\"EventStoreIsFrozen\\")UNION ALL (  SELECT 'Event store is frozen' AS \\"EventStoreIsFrozen\\"  FROM \\"information_schema\\".\\"tables\\"  WHERE \\"table_schema\\" = 'event-store'  AND \\"table_name\\" = 'events-freeze')) = 'OK';WITH cte (\\"lastEventId\\",\\"lastTimestamp\\") AS (VALUES ((SELECT \\"eventId\\" + 1 AS \\"lastEventId\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0),(SELECT GREATEST(CAST(extract(epoch from now()) * 1000 AS BIGINT),\\"timestamp\\")AS \\"lastTimestamp\\"FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0)))UPDATE \\"event-store\\".\\"events-sequence\\" SET \\"eventId\\" = cte.\\"lastEventId\\",\\"transactionId\\" = CAST(txid_current() AS VARCHAR(190)),\\"timestamp\\" = cte.\\"lastTimestamp\\" FROM cte WHERE \\"key\\" = 0;INSERT INTO \\"event-store\\".\\"events\\"(\\"eventId\\",\\"timestamp\\",\\"aggregateId\\",\\"aggregateVersion\\",\\"type\\",\\"payload\\",\\"eventSize\\") VALUES ((SELECT \\"eventId\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0 AND \\"transactionId\\" = CAST(txid_current() AS VARCHAR(190))),(SELECT \\"timestamp\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0 AND \\"transactionId\\" = CAST(txid_current() AS VARCHAR(190))),'id1',1,'AAA','{\\"index\\":1}',93);COMMIT;",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
]
`;

exports[`resolve-storage-mysql-serverless "saveEvent" should save an event with empty payload 1`] = `
Array [
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "START TRANSACTION;SELECT 'OK' WHERE (  (SELECT 'Event store is frozen' AS \\"EventStoreIsFrozen\\")UNION ALL (  SELECT 'Event store is frozen' AS \\"EventStoreIsFrozen\\"  FROM \\"information_schema\\".\\"tables\\"  WHERE \\"table_schema\\" = 'event-store'  AND \\"table_name\\" = 'events-freeze')) = 'OK';WITH cte (\\"lastEventId\\",\\"lastTimestamp\\") AS (VALUES ((SELECT \\"eventId\\" + 1 AS \\"lastEventId\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0),(SELECT GREATEST(CAST(extract(epoch from now()) * 1000 AS BIGINT),\\"timestamp\\")AS \\"lastTimestamp\\"FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0)))UPDATE \\"event-store\\".\\"events-sequence\\" SET \\"eventId\\" = cte.\\"lastEventId\\",\\"transactionId\\" = CAST(txid_current() AS VARCHAR(190)),\\"timestamp\\" = cte.\\"lastTimestamp\\" FROM cte WHERE \\"key\\" = 0;INSERT INTO \\"event-store\\".\\"events\\"(\\"eventId\\",\\"timestamp\\",\\"aggregateId\\",\\"aggregateVersion\\",\\"type\\",\\"payload\\",\\"eventSize\\") VALUES ((SELECT \\"eventId\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0 AND \\"transactionId\\" = CAST(txid_current() AS VARCHAR(190))),(SELECT \\"timestamp\\" FROM \\"event-store\\".\\"events-sequence\\" WHERE \\"key\\" = 0 AND \\"transactionId\\" = CAST(txid_current() AS VARCHAR(190))),'id1',1,'AAA','null',86);COMMIT;",
  },
  "executeStatement",
  Object {
    "continueAfterTimeout": false,
    "database": "postgres",
    "includeResultMetadata": true,
    "resourceArn": "dbClusterOrInstanceArn",
    "secretArn": "awsSecretStoreArn",
    "sql": "WITH \\"cte\\" AS (
        SELECT \\"filteredEvents\\".*,
        SUM(\\"filteredEvents\\".\\"eventSize\\")
        OVER (ORDER BY \\"filteredEvents\\".\\"eventId\\") AS \\"totalEventSize\\"
        FROM (
          SELECT * FROM \\"event-store\\".\\"events\\" 
          ORDER BY \\"eventId\\" ASC
          OFFSET 0
          LIMIT 50
        ) \\"filteredEvents\\"
      )
      SELECT * FROM \\"cte\\"
      WHERE \\"cte\\".\\"totalEventSize\\" < 512000
      ORDER BY \\"cte\\".\\"eventId\\" ASC
      ",
  },
]
`;
