// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API handler wrapper for express.js should work with custom handler with any client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with custom handler with any client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        200,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with custom handler with any client request 3`] = `
Object {
  "callCount": 5,
  "callsInfo": Array [
    Object {
      "args": Array [
        "One-Header-Name",
        "One-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Two-Header-Name",
        "Two-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "One-Cookie-Name=One-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=Two-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=; Expires=Sat, 31 Jan 1970 21:00:00 GMT",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with custom handler with any client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        Object {
          "data": Array [
            123,
            34,
            111,
            114,
            105,
            103,
            105,
            110,
            97,
            108,
            85,
            114,
            108,
            34,
            58,
            34,
            79,
            82,
            73,
            71,
            73,
            78,
            65,
            76,
            45,
            85,
            82,
            76,
            34,
            44,
            34,
            112,
            114,
            111,
            116,
            111,
            99,
            111,
            108,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            76,
            73,
            75,
            69,
            45,
            80,
            82,
            79,
            84,
            79,
            67,
            79,
            76,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            109,
            101,
            116,
            104,
            111,
            100,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            86,
            69,
            82,
            66,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            34,
            58,
            123,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            125,
            44,
            34,
            112,
            97,
            116,
            104,
            34,
            58,
            34,
            80,
            65,
            84,
            72,
            95,
            73,
            78,
            70,
            79,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            115,
            34,
            58,
            123,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            34,
            58,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            125,
            44,
            34,
            114,
            101,
            115,
            111,
            108,
            118,
            101,
            65,
            112,
            105,
            80,
            97,
            116,
            104,
            34,
            58,
            34,
            82,
            69,
            83,
            79,
            76,
            86,
            69,
            45,
            65,
            80,
            73,
            45,
            80,
            65,
            84,
            72,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            115,
            34,
            58,
            123,
            125,
            44,
            34,
            98,
            111,
            100,
            121,
            34,
            58,
            110,
            117,
            108,
            108,
            44,
            34,
            101,
            120,
            105,
            115,
            116,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            44,
            34,
            109,
            105,
            115,
            115,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            125,
          ],
          "type": "Buffer",
        },
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with error throwing handler 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with error throwing handler 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        500,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with error throwing handler 3`] = `
Object {
  "callCount": 0,
  "callsInfo": Array [],
}
`;

exports[`API handler wrapper for express.js should work with error throwing handler 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        "Error: Custom error
    at _callee6$ (/home/vladv/resolve/packages/adapters/api-handler-adapters/resolve-api-handler-express/test/index.test.js:165:11)
    at tryCatch (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:288:22)
    at Generator.prototype.(anonymous function) [as next] (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:114:21)
    at asyncGeneratorStep (/home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
    at _next (/home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:25:9)
    at /home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:32:7
    at new Promise (<anonymous>)
    at /home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:21:12
    at apiThrowHandler (/home/vladv/resolve/packages/adapters/api-handler-adapters/resolve-api-handler-express/test/index.test.js:164:24)",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with file handler with any client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with file handler with any client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        200,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with file handler with any client request 3`] = `
Object {
  "callCount": 6,
  "callsInfo": Array [
    Object {
      "args": Array [
        "One-Header-Name",
        "One-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Two-Header-Name",
        "Two-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "One-Cookie-Name=One-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=Two-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=; Expires=Sat, 31 Jan 1970 21:00:00 GMT",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Content-Disposition",
        "attachment; filename=\\"synthetic-filename.txt\\"",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with file handler with any client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        Object {
          "data": Array [
            123,
            34,
            111,
            114,
            105,
            103,
            105,
            110,
            97,
            108,
            85,
            114,
            108,
            34,
            58,
            34,
            79,
            82,
            73,
            71,
            73,
            78,
            65,
            76,
            45,
            85,
            82,
            76,
            34,
            44,
            34,
            112,
            114,
            111,
            116,
            111,
            99,
            111,
            108,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            76,
            73,
            75,
            69,
            45,
            80,
            82,
            79,
            84,
            79,
            67,
            79,
            76,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            109,
            101,
            116,
            104,
            111,
            100,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            86,
            69,
            82,
            66,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            34,
            58,
            123,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            125,
            44,
            34,
            112,
            97,
            116,
            104,
            34,
            58,
            34,
            80,
            65,
            84,
            72,
            95,
            73,
            78,
            70,
            79,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            115,
            34,
            58,
            123,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            34,
            58,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            125,
            44,
            34,
            114,
            101,
            115,
            111,
            108,
            118,
            101,
            65,
            112,
            105,
            80,
            97,
            116,
            104,
            34,
            58,
            34,
            82,
            69,
            83,
            79,
            76,
            86,
            69,
            45,
            65,
            80,
            73,
            45,
            80,
            65,
            84,
            72,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            115,
            34,
            58,
            123,
            125,
            44,
            34,
            98,
            111,
            100,
            121,
            34,
            58,
            110,
            117,
            108,
            108,
            44,
            34,
            101,
            120,
            105,
            115,
            116,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            44,
            34,
            109,
            105,
            115,
            115,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            125,
          ],
          "type": "Buffer",
        },
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with GET client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with GET client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        200,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with GET client request 3`] = `
Object {
  "callCount": 5,
  "callsInfo": Array [
    Object {
      "args": Array [
        "One-Header-Name",
        "One-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Two-Header-Name",
        "Two-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "One-Cookie-Name=One-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=Two-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=; Expires=Sat, 31 Jan 1970 21:00:00 GMT",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with GET client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        "{\\"originalUrl\\":\\"ORIGINAL-URL\\",\\"protocol\\":\\"HTTP-LIKE-PROTOCOL\\",\\"host\\":\\"host-content\\",\\"method\\":\\"HTTP-VERB\\",\\"query\\":{\\"query-name-1\\":\\"query-value-1\\",\\"query-name-2\\":\\"query-value-2\\"},\\"path\\":\\"PATH_INFO\\",\\"headers\\":{\\"header-name-1\\":\\"header-value-1\\",\\"header-name-2\\":\\"header-value-2\\",\\"cookie\\":\\"cookie-content\\",\\"host\\":\\"host-content\\"},\\"resolveApiPath\\":\\"RESOLVE-API-PATH\\",\\"cookies\\":{},\\"body\\":null,\\"existingHeader\\":\\"One-Header-Value\\",\\"missingHeader\\":\\"One-Header-Value\\"}",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with POST client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with POST client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        200,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with POST client request 3`] = `
Object {
  "callCount": 5,
  "callsInfo": Array [
    Object {
      "args": Array [
        "One-Header-Name",
        "One-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Two-Header-Name",
        "Two-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "One-Cookie-Name=One-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=Two-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=; Expires=Sat, 31 Jan 1970 21:00:00 GMT",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with primitive JSON handler with POST client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        "{\\"originalUrl\\":\\"ORIGINAL-URL\\",\\"protocol\\":\\"HTTP-LIKE-PROTOCOL\\",\\"host\\":\\"host-content\\",\\"method\\":\\"HTTP-VERB\\",\\"query\\":{\\"query-name-1\\":\\"query-value-1\\",\\"query-name-2\\":\\"query-value-2\\"},\\"path\\":\\"PATH_INFO\\",\\"headers\\":{\\"header-name-1\\":\\"header-value-1\\",\\"header-name-2\\":\\"header-value-2\\",\\"cookie\\":\\"cookie-content\\",\\"host\\":\\"host-content\\"},\\"resolveApiPath\\":\\"RESOLVE-API-PATH\\",\\"cookies\\":{},\\"body\\":\\"Body partition oneBody partition two\\",\\"existingHeader\\":\\"One-Header-Value\\",\\"missingHeader\\":\\"One-Header-Value\\"}",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with redirect handler with any client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with redirect handler with any client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        500,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with redirect handler with any client request 3`] = `
Object {
  "callCount": 0,
  "callsInfo": Array [],
}
`;

exports[`API handler wrapper for express.js should work with redirect handler with any client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        "Error: Response already sent
    at validateResponseOpened (/home/vladv/resolve/packages/adapters/api-handler-adapters/resolve-api-handler-express/src/index.js:78:13)
    at Object.validateResponseOpened [as status] (/home/vladv/resolve/packages/adapters/api-handler-adapters/resolve-api-handler-express/src/index.js:122:5)
    at status (/home/vladv/resolve/packages/adapters/api-handler-adapters/resolve-api-handler-express/test/index.test.js:161:9)
    at tryCatch (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:62:40)
    at Generator.invoke [as _invoke] (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:288:22)
    at Generator.prototype.(anonymous function) [as next] (/home/vladv/resolve/node_modules/regenerator-runtime/runtime.js:114:21)
    at asyncGeneratorStep (/home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
    at _next (/home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:25:9)
    at /home/vladv/resolve/node_modules/@babel/runtime/helpers/asyncToGenerator.js:32:7
    at new Promise (<anonymous>)",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with text handler with any client request 1`] = `
Object {
  "callCount": 3,
  "callsInfo": Array [
    Object {
      "args": Array [
        "error",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "data",
        [Function],
      ],
      "returnValue": undefined,
    },
    Object {
      "args": Array [
        "end",
        [Function],
      ],
      "returnValue": undefined,
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with text handler with any client request 2`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        200,
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with text handler with any client request 3`] = `
Object {
  "callCount": 5,
  "callsInfo": Array [
    Object {
      "args": Array [
        "One-Header-Name",
        "One-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Two-Header-Name",
        "Two-Header-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "One-Cookie-Name=One-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=Two-Cookie-Value",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
    Object {
      "args": Array [
        "Set-Cookie",
        "Two-Cookie-Name=; Expires=Sat, 31 Jan 1970 21:00:00 GMT",
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;

exports[`API handler wrapper for express.js should work with text handler with any client request 4`] = `
Object {
  "callCount": 1,
  "callsInfo": Array [
    Object {
      "args": Array [
        Object {
          "data": Array [
            123,
            34,
            111,
            114,
            105,
            103,
            105,
            110,
            97,
            108,
            85,
            114,
            108,
            34,
            58,
            34,
            79,
            82,
            73,
            71,
            73,
            78,
            65,
            76,
            45,
            85,
            82,
            76,
            34,
            44,
            34,
            112,
            114,
            111,
            116,
            111,
            99,
            111,
            108,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            76,
            73,
            75,
            69,
            45,
            80,
            82,
            79,
            84,
            79,
            67,
            79,
            76,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            109,
            101,
            116,
            104,
            111,
            100,
            34,
            58,
            34,
            72,
            84,
            84,
            80,
            45,
            86,
            69,
            82,
            66,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            34,
            58,
            123,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            113,
            117,
            101,
            114,
            121,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            125,
            44,
            34,
            112,
            97,
            116,
            104,
            34,
            58,
            34,
            80,
            65,
            84,
            72,
            95,
            73,
            78,
            70,
            79,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            115,
            34,
            58,
            123,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            49,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            49,
            34,
            44,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            110,
            97,
            109,
            101,
            45,
            50,
            34,
            58,
            34,
            104,
            101,
            97,
            100,
            101,
            114,
            45,
            118,
            97,
            108,
            117,
            101,
            45,
            50,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            34,
            58,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            44,
            34,
            104,
            111,
            115,
            116,
            34,
            58,
            34,
            104,
            111,
            115,
            116,
            45,
            99,
            111,
            110,
            116,
            101,
            110,
            116,
            34,
            125,
            44,
            34,
            114,
            101,
            115,
            111,
            108,
            118,
            101,
            65,
            112,
            105,
            80,
            97,
            116,
            104,
            34,
            58,
            34,
            82,
            69,
            83,
            79,
            76,
            86,
            69,
            45,
            65,
            80,
            73,
            45,
            80,
            65,
            84,
            72,
            34,
            44,
            34,
            99,
            111,
            111,
            107,
            105,
            101,
            115,
            34,
            58,
            123,
            125,
            44,
            34,
            98,
            111,
            100,
            121,
            34,
            58,
            110,
            117,
            108,
            108,
            44,
            34,
            101,
            120,
            105,
            115,
            116,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            44,
            34,
            109,
            105,
            115,
            115,
            105,
            110,
            103,
            72,
            101,
            97,
            100,
            101,
            114,
            34,
            58,
            34,
            79,
            110,
            101,
            45,
            72,
            101,
            97,
            100,
            101,
            114,
            45,
            86,
            97,
            108,
            117,
            101,
            34,
            125,
          ],
          "type": "Buffer",
        },
      ],
      "returnValue": Object {
        "append": [Function],
        "end": [Function],
        "status": [Function],
      },
    },
  ],
}
`;
