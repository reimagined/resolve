import fs from 'fs'
import path from 'path'

const isMonorepoDir = dir => {
  if (dir === '') {
    return false
  }
  try {
    const packageJson = JSON.parse(
      fs.readFileSync(path.join(dir, 'package.json'))
    )
    if (packageJson.workspaces) {
      return true
    }
  } catch (err) {}

  return false
}

const getParentDir = dir => {
  const dirParts = dir.split(path.sep)
  if (dirParts.length <= 1) {
    return dir
  }

  dirParts.pop()
  return dirParts.join(path.sep)
}

const getMonoreposDirs = baseDir => {
  const result = []
  let currentDir = baseDir

  while (true) {
    if (isMonorepoDir(currentDir)) {
      result.push(currentDir)
    }

    const parentDir = getParentDir(currentDir)
    if (parentDir === currentDir) {
      break
    }

    currentDir = parentDir
  }

  return result
}

const getMonoreposNodeModules = () =>
  getMonoreposDirs(process.cwd())
    .map(dir => path.join(dir, 'node_modules'))
    .filter(dir => fs.existsSync(dir))

export default getMonoreposNodeModules
