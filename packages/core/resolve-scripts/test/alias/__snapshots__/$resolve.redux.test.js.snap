// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`base config works correctly [client] 1`] = `
"
import reducer_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testReducer.js\\"
import middleware_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testMiddleware.js\\"
import saga_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testSaga.js\\"
import enhancer_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testEnhancer.js\\"
const constructorBindFunction =
    (
      constructorFunction,
      compileTimeOptions,
      compileTimeImports,
      runTimeOptions,
      runTimeImports
    ) => constructorFunction(
      { ...compileTimeOptions, ...runTimeOptions },
      { ...compileTimeImports, ...runTimeImports }
    )
const idempotentFunction = value => value

const reducer_0_name = \\"testReducerName\\"
const reducer_0 = reducer_0_instance
const middleware_0 = middleware_0_instance
const saga_0 = saga_0_instance
const enhancer_0 = enhancer_0_instance
const redux = {
      reducers: {},
      middlewares: [],
      sagas: [],
      enhancers: []
    }
redux.reducers[reducer_0_name] = reducer_0
redux.middlewares.push(middleware_0)
redux.sagas.push(saga_0)
redux.enhancers.push(enhancer_0)
export default redux
"
`;

exports[`base config works correctly [server] 1`] = `
"
import reducer_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testReducer.js\\"
import middleware_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testMiddleware.js\\"
import saga_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testSaga.js\\"
import enhancer_0_instance from \\"<MONOREPO_DIR>/core/resolve-scripts/test/alias/files/testEnhancer.js\\"
const constructorBindFunction =
    (
      constructorFunction,
      compileTimeOptions,
      compileTimeImports,
      runTimeOptions,
      runTimeImports
    ) => constructorFunction(
      { ...compileTimeOptions, ...runTimeOptions },
      { ...compileTimeImports, ...runTimeImports }
    )
const idempotentFunction = value => value

const reducer_0_name = \\"testReducerName\\"
const reducer_0 = reducer_0_instance
const middleware_0 = middleware_0_instance
const saga_0 = saga_0_instance
const enhancer_0 = enhancer_0_instance
const redux = {
      reducers: {},
      middlewares: [],
      sagas: [],
      enhancers: []
    }
redux.reducers[reducer_0_name] = reducer_0
redux.middlewares.push(middleware_0)
redux.sagas.push(saga_0)
redux.enhancers.push(enhancer_0)
export default redux
"
`;
