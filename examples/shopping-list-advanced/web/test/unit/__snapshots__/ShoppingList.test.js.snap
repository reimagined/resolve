// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ShoppingList
    aggregateId="aggregateId"
    data={
      Object {
        "list": Array [
          Object {
            "checked": true,
            "id": "1",
            "text": "1",
          },
          Object {
            "checked": false,
            "id": "2",
            "text": "2",
          },
        ],
      }
    }
    jwt={
      Object {
        "id": "id",
      }
    }
    removeShoppingItem={[Function]}
    toggleShoppingItem={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          Shopping list name:
        </ControlLabel>,
        <FormGroup
          bsClass="form-group"
          bsSize="large"
        >
          <InputGroup
            bsClass="input-group"
          >
            <InputGroupButton
              bsClass="input-group-btn"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="large"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="far fa-trash-alt"
                />
              </Button>
            </InputGroupButton>
            <FormControl
              bsClass="form-control"
              componentClass="input"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
            />
            <InputGroupButton
              bsClass="input-group-btn"
            >
              <ContextBasedComponent
                bsSize="large"
                href="/share/aggregateId"
              >
                <i
                  className="fas fa-share-alt"
                />
              </ContextBasedComponent>
            </InputGroupButton>
          </InputGroup>
        </FormGroup>,
        <ListGroup
          bsClass="list-group"
          className="example-list"
        >
          <ListGroupItem
            bsClass="list-group-item"
            listItem={false}
          >
            <Checkbox
              bsClass="checkbox"
              checked={true}
              disabled={false}
              inline={true}
              onChange={[Function]}
              title=""
            >
              1
            </Checkbox>
            <ContextBasedComponent
              className="example-close-button"
              onClick={[Function]}
              src="/close-button.png"
            />
          </ListGroupItem>
          <ListGroupItem
            bsClass="list-group-item"
            listItem={false}
          >
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={true}
              onChange={[Function]}
              title=""
            >
              2
            </Checkbox>
            <ContextBasedComponent
              className="example-close-button"
              onClick={[Function]}
              src="/close-button.png"
            />
          </ListGroupItem>
        </ListGroup>,
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          Item name:
        </ControlLabel>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={8}
          >
            <FormControl
              bsClass="form-control"
              className="example-form-control"
              componentClass="input"
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value=""
            />
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={4}
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="success"
              className="example-button"
              disabled={false}
              onClick={[Function]}
            >
              Add Item
            </Button>
          </Col>
        </Row>,
      ],
      "className": "example-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "control-label",
          "children": "Shopping list name:",
          "srOnly": false,
        },
        "ref": null,
        "rendered": "Shopping list name:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form-group",
          "bsSize": "large",
          "children": <InputGroup
            bsClass="input-group"
          >
            <InputGroupButton
              bsClass="input-group-btn"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="large"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="far fa-trash-alt"
                />
              </Button>
            </InputGroupButton>
            <FormControl
              bsClass="form-control"
              componentClass="input"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
            />
            <InputGroupButton
              bsClass="input-group-btn"
            >
              <ContextBasedComponent
                bsSize="large"
                href="/share/aggregateId"
              >
                <i
                  className="fas fa-share-alt"
                />
              </ContextBasedComponent>
            </InputGroupButton>
          </InputGroup>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "input-group",
            "children": Array [
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsSize="large"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </Button>
              </InputGroupButton>,
              <FormControl
                bsClass="form-control"
                componentClass="input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
              />,
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <ContextBasedComponent
                  bsSize="large"
                  href="/share/aggregateId"
                >
                  <i
                    className="fas fa-share-alt"
                  />
                </ContextBasedComponent>
              </InputGroupButton>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "input-group-btn",
                "children": <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsSize="large"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </Button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsSize": "large",
                  "bsStyle": "default",
                  "children": <i
                    className="far fa-trash-alt"
                  />,
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "far fa-trash-alt",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "componentClass": "input",
                "onBlur": [Function],
                "onChange": [Function],
                "onKeyPress": [Function],
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "input-group-btn",
                "children": <ContextBasedComponent
                  bsSize="large"
                  href="/share/aggregateId"
                >
                  <i
                    className="fas fa-share-alt"
                  />
                </ContextBasedComponent>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsSize": "large",
                  "children": <i
                    className="fas fa-share-alt"
                  />,
                  "href": "/share/aggregateId",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-share-alt",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "list-group",
          "children": Array [
            <ListGroupItem
              bsClass="list-group-item"
              listItem={false}
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                inline={true}
                onChange={[Function]}
                title=""
              >
                1
              </Checkbox>
              <ContextBasedComponent
                className="example-close-button"
                onClick={[Function]}
                src="/close-button.png"
              />
            </ListGroupItem>,
            <ListGroupItem
              bsClass="list-group-item"
              listItem={false}
            >
              <Checkbox
                bsClass="checkbox"
                checked={false}
                disabled={false}
                inline={true}
                onChange={[Function]}
                title=""
              >
                2
              </Checkbox>
              <ContextBasedComponent
                className="example-close-button"
                onClick={[Function]}
                src="/close-button.png"
              />
            </ListGroupItem>,
          ],
          "className": "example-list",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "bsClass": "list-group-item",
              "children": Array [
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  disabled={false}
                  inline={true}
                  onChange={[Function]}
                  title=""
                >
                  1
                </Checkbox>,
                <ContextBasedComponent
                  className="example-close-button"
                  onClick={[Function]}
                  src="/close-button.png"
                />,
              ],
              "listItem": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "checkbox",
                  "checked": true,
                  "children": "1",
                  "disabled": false,
                  "inline": true,
                  "onChange": [Function],
                  "title": "",
                },
                "ref": null,
                "rendered": "1",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "example-close-button",
                  "onClick": [Function],
                  "src": "/close-button.png",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "bsClass": "list-group-item",
              "children": Array [
                <Checkbox
                  bsClass="checkbox"
                  checked={false}
                  disabled={false}
                  inline={true}
                  onChange={[Function]}
                  title=""
                >
                  2
                </Checkbox>,
                <ContextBasedComponent
                  className="example-close-button"
                  onClick={[Function]}
                  src="/close-button.png"
                />,
              ],
              "listItem": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "checkbox",
                  "checked": false,
                  "children": "2",
                  "disabled": false,
                  "inline": true,
                  "onChange": [Function],
                  "title": "",
                },
                "ref": null,
                "rendered": "2",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "example-close-button",
                  "onClick": [Function],
                  "src": "/close-button.png",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "control-label",
          "children": "Item name:",
          "srOnly": false,
        },
        "ref": null,
        "rendered": "Item name:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              md={8}
            >
              <FormControl
                bsClass="form-control"
                className="example-form-control"
                componentClass="input"
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
                value=""
              />
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={4}
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="success"
                className="example-button"
                disabled={false}
                onClick={[Function]}
              >
                Add Item
              </Button>
            </Col>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <FormControl
                bsClass="form-control"
                className="example-form-control"
                componentClass="input"
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
                value=""
              />,
              "componentClass": "div",
              "md": 8,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "className": "example-form-control",
                "componentClass": "input",
                "onChange": [Function],
                "onKeyPress": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="success"
                className="example-button"
                disabled={false}
                onClick={[Function]}
              >
                Add Item
              </Button>,
              "componentClass": "div",
              "md": 4,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsStyle": "success",
                "children": "Add Item",
                "className": "example-button",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Add Item",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ControlLabel
            bsClass="control-label"
            srOnly={false}
          >
            Shopping list name:
          </ControlLabel>,
          <FormGroup
            bsClass="form-group"
            bsSize="large"
          >
            <InputGroup
              bsClass="input-group"
            >
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsSize="large"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </Button>
              </InputGroupButton>
              <FormControl
                bsClass="form-control"
                componentClass="input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
              />
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <ContextBasedComponent
                  bsSize="large"
                  href="/share/aggregateId"
                >
                  <i
                    className="fas fa-share-alt"
                  />
                </ContextBasedComponent>
              </InputGroupButton>
            </InputGroup>
          </FormGroup>,
          <ListGroup
            bsClass="list-group"
            className="example-list"
          >
            <ListGroupItem
              bsClass="list-group-item"
              listItem={false}
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                inline={true}
                onChange={[Function]}
                title=""
              >
                1
              </Checkbox>
              <ContextBasedComponent
                className="example-close-button"
                onClick={[Function]}
                src="/close-button.png"
              />
            </ListGroupItem>
            <ListGroupItem
              bsClass="list-group-item"
              listItem={false}
            >
              <Checkbox
                bsClass="checkbox"
                checked={false}
                disabled={false}
                inline={true}
                onChange={[Function]}
                title=""
              >
                2
              </Checkbox>
              <ContextBasedComponent
                className="example-close-button"
                onClick={[Function]}
                src="/close-button.png"
              />
            </ListGroupItem>
          </ListGroup>,
          <ControlLabel
            bsClass="control-label"
            srOnly={false}
          >
            Item name:
          </ControlLabel>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={8}
            >
              <FormControl
                bsClass="form-control"
                className="example-form-control"
                componentClass="input"
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
                value=""
              />
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={4}
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="success"
                className="example-button"
                disabled={false}
                onClick={[Function]}
              >
                Add Item
              </Button>
            </Col>
          </Row>,
        ],
        "className": "example-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "control-label",
            "children": "Shopping list name:",
            "srOnly": false,
          },
          "ref": null,
          "rendered": "Shopping list name:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "bsSize": "large",
            "children": <InputGroup
              bsClass="input-group"
            >
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsSize="large"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                >
                  <i
                    className="far fa-trash-alt"
                  />
                </Button>
              </InputGroupButton>
              <FormControl
                bsClass="form-control"
                componentClass="input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyPress={[Function]}
                type="text"
              />
              <InputGroupButton
                bsClass="input-group-btn"
              >
                <ContextBasedComponent
                  bsSize="large"
                  href="/share/aggregateId"
                >
                  <i
                    className="fas fa-share-alt"
                  />
                </ContextBasedComponent>
              </InputGroupButton>
            </InputGroup>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "input-group",
              "children": Array [
                <InputGroupButton
                  bsClass="input-group-btn"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="large"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <i
                      className="far fa-trash-alt"
                    />
                  </Button>
                </InputGroupButton>,
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyPress={[Function]}
                  type="text"
                />,
                <InputGroupButton
                  bsClass="input-group-btn"
                >
                  <ContextBasedComponent
                    bsSize="large"
                    href="/share/aggregateId"
                  >
                    <i
                      className="fas fa-share-alt"
                    />
                  </ContextBasedComponent>
                </InputGroupButton>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "input-group-btn",
                  "children": <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="large"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <i
                      className="far fa-trash-alt"
                    />
                  </Button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsSize": "large",
                    "bsStyle": "default",
                    "children": <i
                      className="far fa-trash-alt"
                    />,
                    "disabled": false,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "far fa-trash-alt",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "componentClass": "input",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onKeyPress": [Function],
                  "type": "text",
                  "value": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "input-group-btn",
                  "children": <ContextBasedComponent
                    bsSize="large"
                    href="/share/aggregateId"
                  >
                    <i
                      className="fas fa-share-alt"
                    />
                  </ContextBasedComponent>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsSize": "large",
                    "children": <i
                      className="fas fa-share-alt"
                    />,
                    "href": "/share/aggregateId",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fas fa-share-alt",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "list-group",
            "children": Array [
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  disabled={false}
                  inline={true}
                  onChange={[Function]}
                  title=""
                >
                  1
                </Checkbox>
                <ContextBasedComponent
                  className="example-close-button"
                  onClick={[Function]}
                  src="/close-button.png"
                />
              </ListGroupItem>,
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={false}
                  disabled={false}
                  inline={true}
                  onChange={[Function]}
                  title=""
                >
                  2
                </Checkbox>
                <ContextBasedComponent
                  className="example-close-button"
                  onClick={[Function]}
                  src="/close-button.png"
                />
              </ListGroupItem>,
            ],
            "className": "example-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "bsClass": "list-group-item",
                "children": Array [
                  <Checkbox
                    bsClass="checkbox"
                    checked={true}
                    disabled={false}
                    inline={true}
                    onChange={[Function]}
                    title=""
                  >
                    1
                  </Checkbox>,
                  <ContextBasedComponent
                    className="example-close-button"
                    onClick={[Function]}
                    src="/close-button.png"
                  />,
                ],
                "listItem": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "checkbox",
                    "checked": true,
                    "children": "1",
                    "disabled": false,
                    "inline": true,
                    "onChange": [Function],
                    "title": "",
                  },
                  "ref": null,
                  "rendered": "1",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "example-close-button",
                    "onClick": [Function],
                    "src": "/close-button.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "bsClass": "list-group-item",
                "children": Array [
                  <Checkbox
                    bsClass="checkbox"
                    checked={false}
                    disabled={false}
                    inline={true}
                    onChange={[Function]}
                    title=""
                  >
                    2
                  </Checkbox>,
                  <ContextBasedComponent
                    className="example-close-button"
                    onClick={[Function]}
                    src="/close-button.png"
                  />,
                ],
                "listItem": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "checkbox",
                    "checked": false,
                    "children": "2",
                    "disabled": false,
                    "inline": true,
                    "onChange": [Function],
                    "title": "",
                  },
                  "ref": null,
                  "rendered": "2",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "example-close-button",
                    "onClick": [Function],
                    "src": "/close-button.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "control-label",
            "children": "Item name:",
            "srOnly": false,
          },
          "ref": null,
          "rendered": "Item name:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": Array [
              <Col
                bsClass="col"
                componentClass="div"
                md={8}
              >
                <FormControl
                  bsClass="form-control"
                  className="example-form-control"
                  componentClass="input"
                  onChange={[Function]}
                  onKeyPress={[Function]}
                  type="text"
                  value=""
                />
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={4}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="success"
                  className="example-button"
                  disabled={false}
                  onClick={[Function]}
                >
                  Add Item
                </Button>
              </Col>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <FormControl
                  bsClass="form-control"
                  className="example-form-control"
                  componentClass="input"
                  onChange={[Function]}
                  onKeyPress={[Function]}
                  type="text"
                  value=""
                />,
                "componentClass": "div",
                "md": 8,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "className": "example-form-control",
                  "componentClass": "input",
                  "onChange": [Function],
                  "onKeyPress": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="success"
                  className="example-button"
                  disabled={false}
                  onClick={[Function]}
                >
                  Add Item
                </Button>,
                "componentClass": "div",
                "md": 4,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "success",
                  "children": "Add Item",
                  "className": "example-button",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Add Item",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
