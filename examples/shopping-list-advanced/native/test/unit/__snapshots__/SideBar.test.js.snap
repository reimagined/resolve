// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SideBar
    jwt={
      Object {
        "id": "id",
      }
    }
    navigation={
      Object {
        "navigate": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Content
        padder={true}
        style={
          Object {
            "paddingTop": undefined,
          }
        }
      >
        <Logo />
        <List
          dataArray={
            Array [
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="list"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "My Lists",
              },
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="user"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "Settings",
              },
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="sign-out"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "Logout",
              },
            ]
          }
          renderRow={[Function]}
        />
      </Content>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Logo />,
          <List
            dataArray={
              Array [
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="list"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "My Lists",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="user"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Settings",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="sign-out"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Logout",
                },
              ]
            }
            renderRow={[Function]}
          />,
        ],
        "padder": true,
        "style": Object {
          "paddingTop": undefined,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "dataArray": Array [
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="list"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "My Lists",
              },
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="user"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "Settings",
              },
              Object {
                "callback": [Function],
                "icon": <Icon
                  name="sign-out"
                  style={
                    Object {
                      "marginRight": 2,
                      "textAlign": "center",
                      "width": 30,
                    }
                  }
                  type="FontAwesome"
                />,
                "name": "Logout",
              },
            ],
            "renderRow": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Content
          padder={true}
          style={
            Object {
              "paddingTop": undefined,
            }
          }
        >
          <Logo />
          <List
            dataArray={
              Array [
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="list"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "My Lists",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="user"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Settings",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="sign-out"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Logout",
                },
              ]
            }
            renderRow={[Function]}
          />
        </Content>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Logo />,
            <List
              dataArray={
                Array [
                  Object {
                    "callback": [Function],
                    "icon": <Icon
                      name="list"
                      style={
                        Object {
                          "marginRight": 2,
                          "textAlign": "center",
                          "width": 30,
                        }
                      }
                      type="FontAwesome"
                    />,
                    "name": "My Lists",
                  },
                  Object {
                    "callback": [Function],
                    "icon": <Icon
                      name="user"
                      style={
                        Object {
                          "marginRight": 2,
                          "textAlign": "center",
                          "width": 30,
                        }
                      }
                      type="FontAwesome"
                    />,
                    "name": "Settings",
                  },
                  Object {
                    "callback": [Function],
                    "icon": <Icon
                      name="sign-out"
                      style={
                        Object {
                          "marginRight": 2,
                          "textAlign": "center",
                          "width": 30,
                        }
                      }
                      type="FontAwesome"
                    />,
                    "name": "Logout",
                  },
                ]
              }
              renderRow={[Function]}
            />,
          ],
          "padder": true,
          "style": Object {
            "paddingTop": undefined,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "dataArray": Array [
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="list"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "My Lists",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="user"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Settings",
                },
                Object {
                  "callback": [Function],
                  "icon": <Icon
                    name="sign-out"
                    style={
                      Object {
                        "marginRight": 2,
                        "textAlign": "center",
                        "width": 30,
                      }
                    }
                    type="FontAwesome"
                  />,
                  "name": "Logout",
                },
              ],
              "renderRow": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
