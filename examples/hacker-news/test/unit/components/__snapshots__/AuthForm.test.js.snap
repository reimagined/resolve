// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AuthForm
    action="/auth"
    buttonText="login"
    title="Title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          Title
        </styled.div>,
        <ContextBasedComponent
          action="/auth"
          method="POST"
        >
          <styled.div>
            username: 
            <input
              name="username"
              type="text"
            />
          </styled.div>
          <input
            type="submit"
            value="login"
          />
        </ContextBasedComponent>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Title",
        },
        "ref": null,
        "rendered": "Title",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "action": "/auth",
          "children": Array [
            <styled.div>
              username: 
              <input
                name="username"
                type="text"
              />
            </styled.div>,
            <input
              type="submit"
              value="login"
            />,
          ],
          "method": "POST",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "username: ",
                <input
                  name="username"
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "username: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "username",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "login",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            Title
          </styled.div>,
          <ContextBasedComponent
            action="/auth"
            method="POST"
          >
            <styled.div>
              username: 
              <input
                name="username"
                type="text"
              />
            </styled.div>
            <input
              type="submit"
              value="login"
            />
          </ContextBasedComponent>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Title",
          },
          "ref": null,
          "rendered": "Title",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "action": "/auth",
            "children": Array [
              <styled.div>
                username: 
                <input
                  name="username"
                  type="text"
                />
              </styled.div>,
              <input
                type="submit"
                value="login"
              />,
            ],
            "method": "POST",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "username: ",
                  <input
                    name="username"
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "username: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "username",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
                "value": "login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
